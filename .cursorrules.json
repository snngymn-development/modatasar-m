{
  "$schema": "https://raw.githubusercontent.com/getcursor/cursorrules/main/schema.json",
  "prompts": [
    {
      "trigger": "*",
      "instruction": [
        "MİMARİ: feature-first + layered (presentation → domain → data). UI SADECE usecase+entity görür; DTO/data import ETME.",
        "MODELLEME: Freezed + json_serializable. Her modelde doğru part satırları, fromJson/toJson; mapper'lar ayrı dosya.",
        "STATE & DI: Riverpod. Tüm DI core/di/providers.dart içinde. UI provider/usecase üzerinden veriye erişir.",
        "ROUTING: GoRouter; hatalarda errorBuilder ile anlaşılır mesaj.",
        "TEMA: Material 3 + ColorScheme. Eski API (primaryColor, ThemeData brightness vs.) kullanma.",
        "UI KURALLARI: RenderFlex overflow engelle; Row/Column genişleyen elemanlara Expanded/Flexible. Uzun metinler maxLines:1 + ellipsis.",
        "RESPONSIVE: <600 mobil, 600–1024 tablet, >1024 desktop kırılımları; LayoutBuilder/MediaQuery kullan.",
        "ENUM & EXTENSIONS: enum'lar core/enums altında; exhaustif switch, default YOK.",
        "NULL/IMMUTABILITY: ! kullanma; nullable güvenli akış. List mutasyonu yerine kopya üzerinde çalış.",
        "HATA YÖNETİMİ: Result<Either> + Failure; UI'da AsyncValue.when(data/loading/error) deseni.",
        "KALİTE: Kod null-safe, lint-clean, const-optimize, formatlanmış. cyclomatic ≤15, method LOC ≤60, nesting ≤5.",
        "I18N/A11Y: flutter_localizations + intl; metinler i18n; Semantics ekle, font-scale/kontrast güvenli.",
        "GÜVENLİK: Secrets kodda değil; --dart-define/CI secrets. PII loglama YASAK.",
        "PERF: const kullanımını maksimize et; gereksiz rebuild azalt; list/grid builder kullan.",
        "DÖKÜMANTASYON: Public API/widget'lara kısa usage snippet.",
        "SINIR KONTROL: Dairesel bağımlılık yok; UI katmanı DTO import ederse düzelt."
      ]
    },
    {
      "trigger": "observability",
      "instruction": [
        "runApp öncesi global error boundary: FlutterError.onError + PlatformDispatcher.onError + runZonedGuarded.",
        "DEV: talker_flutter log; PROD: sentry_flutter init + captureException.",
        "PII loglama YASAK; sadece anonim ve non-PII event/hata.",
        "Network/Auth/DB hataları Result<Failure> ile yüzeye taşınır."
      ]
    },
    {
      "trigger": "auth-standard",
      "instruction": [
        "Bearer auth: access/refresh token flow.",
        "401 → refresh; başarılı olursa kuyruktaki istekleri yeniden gönder (mutex ile tek refresh).",
        "Tokenlar flutter_secure_storage (keychain/keystore). Logout'ta hepsi temizlenir.",
        "Dio AuthInterceptor: Authorization header ekle; 401'de refresh akışını yönet."
      ]
    },
    {
      "trigger": "flags-analytics",
      "instruction": [
        "Feature flags: local JSON defaults + remote override (endpoint veya Firebase Remote Config).",
        "Analytics privacy-by-design: opt-in/opt-out; event adları kebab-case, parametreler camelCase.",
        "UI doğrudan SDK çağırmaz; core/analytics/analytics.dart üzerinden gider."
      ]
    },
    {
      "trigger": "ci-ready",
      "instruction": [
        "GitHub Actions: format → analyze → test --coverage → build (web, windows).",
        "PR kapıları zorunlu; coverage eşiği ≥ 65% (yapılandırılabilir)."
      ]
    },
    {
      "trigger": "tests-ready",
      "instruction": [
        "Unit: mapper, repository (remote/local mock), usecase; Widget: kritik liste/form.",
        "Mocktail kullan; Drift için in-memory DB test örneği üret."
      ]
    },
    {
      "trigger": "data-standard|offline-first",
      "instruction": [
        "Offline-first: Repository iki kaynak (remote: Dio, local: Drift/Hive) ile çalışır.",
        "Stale-while-revalidate: UI önce local gösterir; arka planda remote tazeler ve local'i günceller.",
        "DTO/Entity/Mapper ayrı; value object/guard uygula; pagination/filters query param ile.",
        "Görseller CDN (.webp/.jxl), UI'da cached_network_image; düşük bantta placeholder/retry."
      ]
    },
    {
      "trigger": "create feature *|yeni feature *|feature oluştur *",
      "instruction": [
        "lib/features/<name>/ altında iskelet üret:",
        "data/: dto/<name>_dto.dart, mappers/<name>_mapper.dart, datasources/{remote,local}/..., repositories/<name>_repository_impl.dart",
        "domain/: entities/<name>.dart, repositories/<name>_repository.dart, usecases/fetch_<name>_usecase.dart",
        "presentation/: pages/<name>_page.dart, state/<name>_controller.dart, widgets/",
        "Tüm kod Riverpod + Freezed + JsonSerializable ile derlenebilir; part satırları eksiksiz.",
        "UI Material 3, overflow-safe; responsive kırılımlar uygulanmış.",
        "Her public dosyanın sonuna kısa usage snippet ekle."
      ]
    }
  ]
}